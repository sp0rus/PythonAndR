#!/usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
import multivariate
import math

#read all the data in from the file
sepallength = np.loadtxt('iris.data', delimiter=',', skiprows=0,usecols=[0])
sepalwidth = np.loadtxt('iris.data', delimiter=',', skiprows=0,usecols=[1])
petallength = np.loadtxt('iris.data', delimiter=',', skiprows=0,usecols=[2])
petalwidth = np.loadtxt('iris.data', delimiter=',', skiprows=0,usecols=[3])
irisclass = []
for line in file('iris.data'):
    line = line.strip()
    curline = line.split(",")
    iristype = 0
    if curline[4] == 'Iris-setosa':
        iristype = 0
    elif curline[4] == 'Iris-versicolor':
        iristype = 1
    elif curline[4] == 'Iris-virginica':
        iristype = 2
    irisclass.append(iristype)
irisclass = np.array(irisclass)

# sepal length and petal length
coeff = multivariate.multiRegression(sepallength, petallength)
fit = multivariate.estimatedFit()
rsquare = multivariate.adjustedRsquared()
print "Regression coefficient: %s" %(coeff)
print "Adjusted R-square Value: %s" %(rsquare)

# sepal length and sepal width
coeff = multivariate.multiRegression(sepallength, sepalwidth)
fit = multivariate.estimatedFit()
rsquare = multivariate.adjustedRsquared()
print "Regression coefficient: %s" %(coeff)
print "Adjusted R-square Value: %s" %(rsquare)

# sepal length, petal length, petal width
coeff = multivariate.multiRegression()
fit = multivariate.estimatedFit()
rsquare = multivariate.adjustedRsquared()
print "Regression coefficient: %s" %(coeff)
print "Adjusted R-square Value: %s" %(rsquare)

# sepal length, sepal width, petal length, petal width
coeff = multivariate.multiRegression()
fit = multivariate.estimatedFit()
rsquare = multivariate.adjustedRsquared()
print "Regression coefficient: %s" %(coeff)
print "Adjusted R-square Value: %s" %(rsquare)
